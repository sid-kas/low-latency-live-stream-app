# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import butter_pb2 as butter__pb2


class VideoStreamStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.connect = channel.unary_unary(
                '/ButterStream.VideoStream/connect',
                request_serializer=butter__pb2.ConnectArg.SerializeToString,
                response_deserializer=butter__pb2.ReturnStatus.FromString,
                )
        self.startStream = channel.unary_stream(
                '/ButterStream.VideoStream/startStream',
                request_serializer=butter__pb2.StartStreamArg.SerializeToString,
                response_deserializer=butter__pb2.DataContainer.FromString,
                )
        self.stopStream = channel.unary_unary(
                '/ButterStream.VideoStream/stopStream',
                request_serializer=butter__pb2.StopStreamArg.SerializeToString,
                response_deserializer=butter__pb2.ReturnStatus.FromString,
                )
        self.disconnect = channel.unary_unary(
                '/ButterStream.VideoStream/disconnect',
                request_serializer=butter__pb2.DisconnectArg.SerializeToString,
                response_deserializer=butter__pb2.ReturnStatus.FromString,
                )


class VideoStreamServicer(object):
    """Missing associated documentation comment in .proto file"""

    def connect(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startStream(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopStream(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def disconnect(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VideoStreamServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'connect': grpc.unary_unary_rpc_method_handler(
                    servicer.connect,
                    request_deserializer=butter__pb2.ConnectArg.FromString,
                    response_serializer=butter__pb2.ReturnStatus.SerializeToString,
            ),
            'startStream': grpc.unary_stream_rpc_method_handler(
                    servicer.startStream,
                    request_deserializer=butter__pb2.StartStreamArg.FromString,
                    response_serializer=butter__pb2.DataContainer.SerializeToString,
            ),
            'stopStream': grpc.unary_unary_rpc_method_handler(
                    servicer.stopStream,
                    request_deserializer=butter__pb2.StopStreamArg.FromString,
                    response_serializer=butter__pb2.ReturnStatus.SerializeToString,
            ),
            'disconnect': grpc.unary_unary_rpc_method_handler(
                    servicer.disconnect,
                    request_deserializer=butter__pb2.DisconnectArg.FromString,
                    response_serializer=butter__pb2.ReturnStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ButterStream.VideoStream', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VideoStream(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def connect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ButterStream.VideoStream/connect',
            butter__pb2.ConnectArg.SerializeToString,
            butter__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def startStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ButterStream.VideoStream/startStream',
            butter__pb2.StartStreamArg.SerializeToString,
            butter__pb2.DataContainer.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def stopStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ButterStream.VideoStream/stopStream',
            butter__pb2.StopStreamArg.SerializeToString,
            butter__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def disconnect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ButterStream.VideoStream/disconnect',
            butter__pb2.DisconnectArg.SerializeToString,
            butter__pb2.ReturnStatus.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
